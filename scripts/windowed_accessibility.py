"""
This script finds which 300 bp windows are accessible. A window is marked as accessible if it contains >=90% of 
accessible bases.

This script requires a FASTA reference genome file and the non-windowed accessibility masks (generated by script_mask.sh).
"""

import numpy as np
import pysam
import pysamstats

def main():
    FASTA_FILENAME = '/share/lanzarolab/users/abasu/reference/Anopheles-gambiae-PEST_CHROMOSOMES_AgamP4.fa'
    WINDOW_SIZE = 300
    fasta = pysam.FastaFile(fasta_filename)
    for chromosome in ("2R", "2L", "3R", "3L", "X"):
        num_windows = fasta.get_reference_length(chromosome) // window_size + 1
        # initialize bool array as all Fails. uses 1-based indexing.
        accessibility_pass = np.zeros(fasta.get_reference_length(chromosome)+1, '?')
        with open(f"accessibility_masks/accessibility.{chromosome}.mask", 'r') as mask:
            for line in mask:
                position = int(line.lstrip(chromosome + " "))
                # set array element to true if the base pair PASSes
                accessibility_pass[position] = True
        # set element to False if <90% of bases in the window PASS
        windowed_accessibility = [not np.mean(accessibility_pass[n: n+window_size]) < 0.9 for n in np.arange(1, num_windows*window_size, window_size)]
        with open(f"accessibility.{chromosome}_{window_size}.mask", 'wb') as window_mask:
            np.save(window_mask, np.array(windowed_accessibility))
        print(f"{100*np.count_nonzero(windowed_accessibility)/len(windowed_accessibility)}% of windows in {chromosome} were marked as accessible")
    
if __name__ == "__main__":
    main()